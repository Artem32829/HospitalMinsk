#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     Этот код создан программой.
//     Исполняемая версия:4.0.30319.42000
//
//     Изменения в этом файле могут привести к неправильной работе и будут потеряны в случае
//     повторной генерации кода.
// </auto-generated>
//------------------------------------------------------------------------------

namespace Project.Model
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HospitalRB")]
	public partial class DataClasses1DataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Определения метода расширяемости
    partial void OnCreated();
    partial void InsertAutorization_users(Autorization_users instance);
    partial void UpdateAutorization_users(Autorization_users instance);
    partial void DeleteAutorization_users(Autorization_users instance);
    partial void InsertHospitalInfo(HospitalInfo instance);
    partial void UpdateHospitalInfo(HospitalInfo instance);
    partial void DeleteHospitalInfo(HospitalInfo instance);
    partial void InsertRegistrationPatient(RegistrationPatient instance);
    partial void UpdateRegistrationPatient(RegistrationPatient instance);
    partial void DeleteRegistrationPatient(RegistrationPatient instance);
    partial void InsertTicketList(TicketList instance);
    partial void UpdateTicketList(TicketList instance);
    partial void DeleteTicketList(TicketList instance);
    partial void InsertNextDate(NextDate instance);
    partial void UpdateNextDate(NextDate instance);
    partial void DeleteNextDate(NextDate instance);
    #endregion
		
		public DataClasses1DataContext() : 
				base(global::Project.Properties.Settings.Default.HospitalRBConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public DataClasses1DataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<Autorization_users> Autorization_users
		{
			get
			{
				return this.GetTable<Autorization_users>();
			}
		}
		
		public System.Data.Linq.Table<HospitalInfo> HospitalInfo
		{
			get
			{
				return this.GetTable<HospitalInfo>();
			}
		}
		
		public System.Data.Linq.Table<RegPatientView> RegPatientView
		{
			get
			{
				return this.GetTable<RegPatientView>();
			}
		}
		
		public System.Data.Linq.Table<RegistrationPatient> RegistrationPatient
		{
			get
			{
				return this.GetTable<RegistrationPatient>();
			}
		}
		
		public System.Data.Linq.Table<TicketList> TicketList
		{
			get
			{
				return this.GetTable<TicketList>();
			}
		}
		
		public System.Data.Linq.Table<NextDate> NextDate
		{
			get
			{
				return this.GetTable<NextDate>();
			}
		}
		
		public System.Data.Linq.Table<ListTicket> ListTicket
		{
			get
			{
				return this.GetTable<ListTicket>();
			}
		}
		
		public System.Data.Linq.Table<TicketView> TicketView
		{
			get
			{
				return this.GetTable<TicketView>();
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Autorization_users")]
	public partial class Autorization_users : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_users;
		
		private string _email;
		
		private string _password_users;
		
		private System.Nullable<bool> _isenable;
		
		private EntitySet<HospitalInfo> _HospitalInfo;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_usersChanging(int value);
    partial void OnId_usersChanged();
    partial void OnemailChanging(string value);
    partial void OnemailChanged();
    partial void Onpassword_usersChanging(string value);
    partial void Onpassword_usersChanged();
    partial void OnisenableChanging(System.Nullable<bool> value);
    partial void OnisenableChanged();
    #endregion
		
		public Autorization_users()
		{
			this._HospitalInfo = new EntitySet<HospitalInfo>(new Action<HospitalInfo>(this.attach_HospitalInfo), new Action<HospitalInfo>(this.detach_HospitalInfo));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_users", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_users
		{
			get
			{
				return this._Id_users;
			}
			set
			{
				if ((this._Id_users != value))
				{
					this.OnId_usersChanging(value);
					this.SendPropertyChanging();
					this._Id_users = value;
					this.SendPropertyChanged("Id_users");
					this.OnId_usersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_email", DbType="NVarChar(50)")]
		public string email
		{
			get
			{
				return this._email;
			}
			set
			{
				if ((this._email != value))
				{
					this.OnemailChanging(value);
					this.SendPropertyChanging();
					this._email = value;
					this.SendPropertyChanged("email");
					this.OnemailChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_password_users", DbType="NVarChar(16)")]
		public string password_users
		{
			get
			{
				return this._password_users;
			}
			set
			{
				if ((this._password_users != value))
				{
					this.Onpassword_usersChanging(value);
					this.SendPropertyChanging();
					this._password_users = value;
					this.SendPropertyChanged("password_users");
					this.Onpassword_usersChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_isenable", DbType="Bit")]
		public System.Nullable<bool> isenable
		{
			get
			{
				return this._isenable;
			}
			set
			{
				if ((this._isenable != value))
				{
					this.OnisenableChanging(value);
					this.SendPropertyChanging();
					this._isenable = value;
					this.SendPropertyChanged("isenable");
					this.OnisenableChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autorization_users_HospitalInfo", Storage="_HospitalInfo", ThisKey="Id_users", OtherKey="id_fk_autorization")]
		public EntitySet<HospitalInfo> HospitalInfo
		{
			get
			{
				return this._HospitalInfo;
			}
			set
			{
				this._HospitalInfo.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_HospitalInfo(HospitalInfo entity)
		{
			this.SendPropertyChanging();
			entity.Autorization_users = this;
		}
		
		private void detach_HospitalInfo(HospitalInfo entity)
		{
			this.SendPropertyChanging();
			entity.Autorization_users = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.HospitalInfo")]
	public partial class HospitalInfo : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_hospital;
		
		private string _name_hospital;
		
		private string _city_hospital;
		
		private string _adress_hospital;
		
		private int _id_fk_autorization;
		
		private EntityRef<Autorization_users> _Autorization_users;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_hospitalChanging(int value);
    partial void OnId_hospitalChanged();
    partial void Onname_hospitalChanging(string value);
    partial void Onname_hospitalChanged();
    partial void Oncity_hospitalChanging(string value);
    partial void Oncity_hospitalChanged();
    partial void Onadress_hospitalChanging(string value);
    partial void Onadress_hospitalChanged();
    partial void Onid_fk_autorizationChanging(int value);
    partial void Onid_fk_autorizationChanged();
    #endregion
		
		public HospitalInfo()
		{
			this._Autorization_users = default(EntityRef<Autorization_users>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_hospital", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_hospital
		{
			get
			{
				return this._Id_hospital;
			}
			set
			{
				if ((this._Id_hospital != value))
				{
					this.OnId_hospitalChanging(value);
					this.SendPropertyChanging();
					this._Id_hospital = value;
					this.SendPropertyChanged("Id_hospital");
					this.OnId_hospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_hospital", DbType="NVarChar(70)")]
		public string name_hospital
		{
			get
			{
				return this._name_hospital;
			}
			set
			{
				if ((this._name_hospital != value))
				{
					this.Onname_hospitalChanging(value);
					this.SendPropertyChanging();
					this._name_hospital = value;
					this.SendPropertyChanged("name_hospital");
					this.Onname_hospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city_hospital", DbType="NVarChar(20)")]
		public string city_hospital
		{
			get
			{
				return this._city_hospital;
			}
			set
			{
				if ((this._city_hospital != value))
				{
					this.Oncity_hospitalChanging(value);
					this.SendPropertyChanging();
					this._city_hospital = value;
					this.SendPropertyChanged("city_hospital");
					this.Oncity_hospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress_hospital", DbType="NVarChar(50)")]
		public string adress_hospital
		{
			get
			{
				return this._adress_hospital;
			}
			set
			{
				if ((this._adress_hospital != value))
				{
					this.Onadress_hospitalChanging(value);
					this.SendPropertyChanging();
					this._adress_hospital = value;
					this.SendPropertyChanged("adress_hospital");
					this.Onadress_hospitalChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_fk_autorization", DbType="Int NOT NULL")]
		public int id_fk_autorization
		{
			get
			{
				return this._id_fk_autorization;
			}
			set
			{
				if ((this._id_fk_autorization != value))
				{
					if (this._Autorization_users.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_fk_autorizationChanging(value);
					this.SendPropertyChanging();
					this._id_fk_autorization = value;
					this.SendPropertyChanged("id_fk_autorization");
					this.Onid_fk_autorizationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="Autorization_users_HospitalInfo", Storage="_Autorization_users", ThisKey="id_fk_autorization", OtherKey="Id_users", IsForeignKey=true)]
		public Autorization_users Autorization_users
		{
			get
			{
				return this._Autorization_users.Entity;
			}
			set
			{
				Autorization_users previousValue = this._Autorization_users.Entity;
				if (((previousValue != value) 
							|| (this._Autorization_users.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._Autorization_users.Entity = null;
						previousValue.HospitalInfo.Remove(this);
					}
					this._Autorization_users.Entity = value;
					if ((value != null))
					{
						value.HospitalInfo.Add(this);
						this._id_fk_autorization = value.Id_users;
					}
					else
					{
						this._id_fk_autorization = default(int);
					}
					this.SendPropertyChanged("Autorization_users");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegPatientView")]
	public partial class RegPatientView
	{
		
		private int _Номер_по_журналу;
		
		private string _ФИО_пациента;
		
		private string _Дата_рождения;
		
		private string _Адрес_пациента;
		
		private string _Номер_телефона_пациента;
		
		public RegPatientView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер_по_журналу", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int Номер_по_журналу
		{
			get
			{
				return this._Номер_по_журналу;
			}
			set
			{
				if ((this._Номер_по_журналу != value))
				{
					this._Номер_по_журналу = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ФИО_пациента", DbType="NVarChar(70)")]
		public string ФИО_пациента
		{
			get
			{
				return this._ФИО_пациента;
			}
			set
			{
				if ((this._ФИО_пациента != value))
				{
					this._ФИО_пациента = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Дата_рождения", DbType="NVarChar(10)")]
		public string Дата_рождения
		{
			get
			{
				return this._Дата_рождения;
			}
			set
			{
				if ((this._Дата_рождения != value))
				{
					this._Дата_рождения = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Адрес_пациента", DbType="NVarChar(70)")]
		public string Адрес_пациента
		{
			get
			{
				return this._Адрес_пациента;
			}
			set
			{
				if ((this._Адрес_пациента != value))
				{
					this._Адрес_пациента = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Номер_телефона_пациента", DbType="NVarChar(14)")]
		public string Номер_телефона_пациента
		{
			get
			{
				return this._Номер_телефона_пациента;
			}
			set
			{
				if ((this._Номер_телефона_пациента != value))
				{
					this._Номер_телефона_пациента = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.RegistrationPatient")]
	public partial class RegistrationPatient : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_patient;
		
		private string _name_patient;
		
		private string _pol;
		
		private string _side;
		
		private string _birthday;
		
		private string _adress_patient;
		
		private string _numberPhone_patient;
		
		private EntitySet<TicketList> _TicketList;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_patientChanging(int value);
    partial void OnId_patientChanged();
    partial void Onname_patientChanging(string value);
    partial void Onname_patientChanged();
    partial void OnpolChanging(string value);
    partial void OnpolChanged();
    partial void OnsideChanging(string value);
    partial void OnsideChanged();
    partial void OnbirthdayChanging(string value);
    partial void OnbirthdayChanged();
    partial void Onadress_patientChanging(string value);
    partial void Onadress_patientChanged();
    partial void OnnumberPhone_patientChanging(string value);
    partial void OnnumberPhone_patientChanged();
    #endregion
		
		public RegistrationPatient()
		{
			this._TicketList = new EntitySet<TicketList>(new Action<TicketList>(this.attach_TicketList), new Action<TicketList>(this.detach_TicketList));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_patient", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_patient
		{
			get
			{
				return this._Id_patient;
			}
			set
			{
				if ((this._Id_patient != value))
				{
					this.OnId_patientChanging(value);
					this.SendPropertyChanging();
					this._Id_patient = value;
					this.SendPropertyChanged("Id_patient");
					this.OnId_patientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name_patient", DbType="NVarChar(70)")]
		public string name_patient
		{
			get
			{
				return this._name_patient;
			}
			set
			{
				if ((this._name_patient != value))
				{
					this.Onname_patientChanging(value);
					this.SendPropertyChanging();
					this._name_patient = value;
					this.SendPropertyChanged("name_patient");
					this.Onname_patientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_pol", DbType="NVarChar(10)")]
		public string pol
		{
			get
			{
				return this._pol;
			}
			set
			{
				if ((this._pol != value))
				{
					this.OnpolChanging(value);
					this.SendPropertyChanging();
					this._pol = value;
					this.SendPropertyChanged("pol");
					this.OnpolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_side", DbType="NVarChar(3)")]
		public string side
		{
			get
			{
				return this._side;
			}
			set
			{
				if ((this._side != value))
				{
					this.OnsideChanging(value);
					this.SendPropertyChanging();
					this._side = value;
					this.SendPropertyChanged("side");
					this.OnsideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_birthday", DbType="NVarChar(10)")]
		public string birthday
		{
			get
			{
				return this._birthday;
			}
			set
			{
				if ((this._birthday != value))
				{
					this.OnbirthdayChanging(value);
					this.SendPropertyChanging();
					this._birthday = value;
					this.SendPropertyChanged("birthday");
					this.OnbirthdayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_adress_patient", DbType="NVarChar(70)")]
		public string adress_patient
		{
			get
			{
				return this._adress_patient;
			}
			set
			{
				if ((this._adress_patient != value))
				{
					this.Onadress_patientChanging(value);
					this.SendPropertyChanging();
					this._adress_patient = value;
					this.SendPropertyChanged("adress_patient");
					this.Onadress_patientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_numberPhone_patient", DbType="NVarChar(14)")]
		public string numberPhone_patient
		{
			get
			{
				return this._numberPhone_patient;
			}
			set
			{
				if ((this._numberPhone_patient != value))
				{
					this.OnnumberPhone_patientChanging(value);
					this.SendPropertyChanging();
					this._numberPhone_patient = value;
					this.SendPropertyChanged("numberPhone_patient");
					this.OnnumberPhone_patientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegistrationPatient_TicketList", Storage="_TicketList", ThisKey="Id_patient", OtherKey="id_fk_side")]
		public EntitySet<TicketList> TicketList
		{
			get
			{
				return this._TicketList;
			}
			set
			{
				this._TicketList.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_TicketList(TicketList entity)
		{
			this.SendPropertyChanging();
			entity.RegistrationPatient = this;
		}
		
		private void detach_TicketList(TicketList entity)
		{
			this.SendPropertyChanging();
			entity.RegistrationPatient = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TicketList")]
	public partial class TicketList : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_ticket;
		
		private System.Nullable<int> _number;
		
		private string _FIO_patient;
		
		private string _FIO_doctor;
		
		private string _Pol;
		
		private System.Nullable<int> _Old;
		
		private string _Job_patient;
		
		private string _Other;
		
		private string _Specialty_doctor;
		
		private string _Code_diseases;
		
		private System.Nullable<System.DateTime> _Date_vidachi;
		
		private System.Nullable<System.DateTime> _Start_date_disease;
		
		private System.Nullable<System.DateTime> _End_date_disease;
		
		private System.Nullable<int> _id_fk_side;
		
		private EntitySet<NextDate> _NextDate;
		
		private EntityRef<RegistrationPatient> _RegistrationPatient;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_ticketChanging(int value);
    partial void OnId_ticketChanged();
    partial void OnnumberChanging(System.Nullable<int> value);
    partial void OnnumberChanged();
    partial void OnFIO_patientChanging(string value);
    partial void OnFIO_patientChanged();
    partial void OnFIO_doctorChanging(string value);
    partial void OnFIO_doctorChanged();
    partial void OnPolChanging(string value);
    partial void OnPolChanged();
    partial void OnOldChanging(System.Nullable<int> value);
    partial void OnOldChanged();
    partial void OnJob_patientChanging(string value);
    partial void OnJob_patientChanged();
    partial void OnOtherChanging(string value);
    partial void OnOtherChanged();
    partial void OnSpecialty_doctorChanging(string value);
    partial void OnSpecialty_doctorChanged();
    partial void OnCode_diseasesChanging(string value);
    partial void OnCode_diseasesChanged();
    partial void OnDate_vidachiChanging(System.Nullable<System.DateTime> value);
    partial void OnDate_vidachiChanged();
    partial void OnStart_date_diseaseChanging(System.Nullable<System.DateTime> value);
    partial void OnStart_date_diseaseChanged();
    partial void OnEnd_date_diseaseChanging(System.Nullable<System.DateTime> value);
    partial void OnEnd_date_diseaseChanged();
    partial void Onid_fk_sideChanging(System.Nullable<int> value);
    partial void Onid_fk_sideChanged();
    #endregion
		
		public TicketList()
		{
			this._NextDate = new EntitySet<NextDate>(new Action<NextDate>(this.attach_NextDate), new Action<NextDate>(this.detach_NextDate));
			this._RegistrationPatient = default(EntityRef<RegistrationPatient>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_ticket", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_ticket
		{
			get
			{
				return this._Id_ticket;
			}
			set
			{
				if ((this._Id_ticket != value))
				{
					this.OnId_ticketChanging(value);
					this.SendPropertyChanging();
					this._Id_ticket = value;
					this.SendPropertyChanged("Id_ticket");
					this.OnId_ticketChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_number", DbType="Int")]
		public System.Nullable<int> number
		{
			get
			{
				return this._number;
			}
			set
			{
				if ((this._number != value))
				{
					this.OnnumberChanging(value);
					this.SendPropertyChanging();
					this._number = value;
					this.SendPropertyChanged("number");
					this.OnnumberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO_patient", DbType="NVarChar(70)")]
		public string FIO_patient
		{
			get
			{
				return this._FIO_patient;
			}
			set
			{
				if ((this._FIO_patient != value))
				{
					this.OnFIO_patientChanging(value);
					this.SendPropertyChanging();
					this._FIO_patient = value;
					this.SendPropertyChanged("FIO_patient");
					this.OnFIO_patientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_FIO_doctor", DbType="NVarChar(70)")]
		public string FIO_doctor
		{
			get
			{
				return this._FIO_doctor;
			}
			set
			{
				if ((this._FIO_doctor != value))
				{
					this.OnFIO_doctorChanging(value);
					this.SendPropertyChanging();
					this._FIO_doctor = value;
					this.SendPropertyChanged("FIO_doctor");
					this.OnFIO_doctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Pol", DbType="NVarChar(10)")]
		public string Pol
		{
			get
			{
				return this._Pol;
			}
			set
			{
				if ((this._Pol != value))
				{
					this.OnPolChanging(value);
					this.SendPropertyChanging();
					this._Pol = value;
					this.SendPropertyChanged("Pol");
					this.OnPolChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Old", DbType="Int")]
		public System.Nullable<int> Old
		{
			get
			{
				return this._Old;
			}
			set
			{
				if ((this._Old != value))
				{
					this.OnOldChanging(value);
					this.SendPropertyChanging();
					this._Old = value;
					this.SendPropertyChanged("Old");
					this.OnOldChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Job_patient", DbType="NVarChar(50)")]
		public string Job_patient
		{
			get
			{
				return this._Job_patient;
			}
			set
			{
				if ((this._Job_patient != value))
				{
					this.OnJob_patientChanging(value);
					this.SendPropertyChanging();
					this._Job_patient = value;
					this.SendPropertyChanged("Job_patient");
					this.OnJob_patientChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Other", DbType="NVarChar(50)")]
		public string Other
		{
			get
			{
				return this._Other;
			}
			set
			{
				if ((this._Other != value))
				{
					this.OnOtherChanging(value);
					this.SendPropertyChanging();
					this._Other = value;
					this.SendPropertyChanged("Other");
					this.OnOtherChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Specialty_doctor", DbType="NVarChar(30)")]
		public string Specialty_doctor
		{
			get
			{
				return this._Specialty_doctor;
			}
			set
			{
				if ((this._Specialty_doctor != value))
				{
					this.OnSpecialty_doctorChanging(value);
					this.SendPropertyChanging();
					this._Specialty_doctor = value;
					this.SendPropertyChanged("Specialty_doctor");
					this.OnSpecialty_doctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Code_diseases", DbType="NVarChar(10)")]
		public string Code_diseases
		{
			get
			{
				return this._Code_diseases;
			}
			set
			{
				if ((this._Code_diseases != value))
				{
					this.OnCode_diseasesChanging(value);
					this.SendPropertyChanging();
					this._Code_diseases = value;
					this.SendPropertyChanged("Code_diseases");
					this.OnCode_diseasesChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Date_vidachi", DbType="Date")]
		public System.Nullable<System.DateTime> Date_vidachi
		{
			get
			{
				return this._Date_vidachi;
			}
			set
			{
				if ((this._Date_vidachi != value))
				{
					this.OnDate_vidachiChanging(value);
					this.SendPropertyChanging();
					this._Date_vidachi = value;
					this.SendPropertyChanged("Date_vidachi");
					this.OnDate_vidachiChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Start_date_disease", DbType="Date")]
		public System.Nullable<System.DateTime> Start_date_disease
		{
			get
			{
				return this._Start_date_disease;
			}
			set
			{
				if ((this._Start_date_disease != value))
				{
					this.OnStart_date_diseaseChanging(value);
					this.SendPropertyChanging();
					this._Start_date_disease = value;
					this.SendPropertyChanged("Start_date_disease");
					this.OnStart_date_diseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_End_date_disease", DbType="Date")]
		public System.Nullable<System.DateTime> End_date_disease
		{
			get
			{
				return this._End_date_disease;
			}
			set
			{
				if ((this._End_date_disease != value))
				{
					this.OnEnd_date_diseaseChanging(value);
					this.SendPropertyChanging();
					this._End_date_disease = value;
					this.SendPropertyChanged("End_date_disease");
					this.OnEnd_date_diseaseChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_fk_side", DbType="Int")]
		public System.Nullable<int> id_fk_side
		{
			get
			{
				return this._id_fk_side;
			}
			set
			{
				if ((this._id_fk_side != value))
				{
					if (this._RegistrationPatient.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_fk_sideChanging(value);
					this.SendPropertyChanging();
					this._id_fk_side = value;
					this.SendPropertyChanged("id_fk_side");
					this.Onid_fk_sideChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketList_NextDate", Storage="_NextDate", ThisKey="Id_ticket", OtherKey="id_fk_next")]
		public EntitySet<NextDate> NextDate
		{
			get
			{
				return this._NextDate;
			}
			set
			{
				this._NextDate.Assign(value);
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="RegistrationPatient_TicketList", Storage="_RegistrationPatient", ThisKey="id_fk_side", OtherKey="Id_patient", IsForeignKey=true)]
		public RegistrationPatient RegistrationPatient
		{
			get
			{
				return this._RegistrationPatient.Entity;
			}
			set
			{
				RegistrationPatient previousValue = this._RegistrationPatient.Entity;
				if (((previousValue != value) 
							|| (this._RegistrationPatient.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._RegistrationPatient.Entity = null;
						previousValue.TicketList.Remove(this);
					}
					this._RegistrationPatient.Entity = value;
					if ((value != null))
					{
						value.TicketList.Add(this);
						this._id_fk_side = value.Id_patient;
					}
					else
					{
						this._id_fk_side = default(Nullable<int>);
					}
					this.SendPropertyChanged("RegistrationPatient");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_NextDate(NextDate entity)
		{
			this.SendPropertyChanging();
			entity.TicketList = this;
		}
		
		private void detach_NextDate(NextDate entity)
		{
			this.SendPropertyChanging();
			entity.TicketList = null;
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.NextDate")]
	public partial class NextDate : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Id_next;
		
		private System.Nullable<int> _next_number;
		
		private string _fio_doctor;
		
		private string _soec_doctor;
		
		private System.Nullable<System.DateTime> _star_date;
		
		private System.Nullable<System.DateTime> _end_date;
		
		private System.Nullable<System.DateTime> _close_date;
		
		private System.Nullable<int> _id_fk_next;
		
		private EntityRef<TicketList> _TicketList;
		
    #region Определения метода расширяемости
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnId_nextChanging(int value);
    partial void OnId_nextChanged();
    partial void Onnext_numberChanging(System.Nullable<int> value);
    partial void Onnext_numberChanged();
    partial void Onfio_doctorChanging(string value);
    partial void Onfio_doctorChanged();
    partial void Onsoec_doctorChanging(string value);
    partial void Onsoec_doctorChanged();
    partial void Onstar_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onstar_dateChanged();
    partial void Onend_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onend_dateChanged();
    partial void Onclose_dateChanging(System.Nullable<System.DateTime> value);
    partial void Onclose_dateChanged();
    partial void Onid_fk_nextChanging(System.Nullable<int> value);
    partial void Onid_fk_nextChanged();
    #endregion
		
		public NextDate()
		{
			this._TicketList = default(EntityRef<TicketList>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Id_next", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int Id_next
		{
			get
			{
				return this._Id_next;
			}
			set
			{
				if ((this._Id_next != value))
				{
					this.OnId_nextChanging(value);
					this.SendPropertyChanging();
					this._Id_next = value;
					this.SendPropertyChanged("Id_next");
					this.OnId_nextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_next_number", DbType="Int")]
		public System.Nullable<int> next_number
		{
			get
			{
				return this._next_number;
			}
			set
			{
				if ((this._next_number != value))
				{
					this.Onnext_numberChanging(value);
					this.SendPropertyChanging();
					this._next_number = value;
					this.SendPropertyChanged("next_number");
					this.Onnext_numberChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_fio_doctor", DbType="NVarChar(70)")]
		public string fio_doctor
		{
			get
			{
				return this._fio_doctor;
			}
			set
			{
				if ((this._fio_doctor != value))
				{
					this.Onfio_doctorChanging(value);
					this.SendPropertyChanging();
					this._fio_doctor = value;
					this.SendPropertyChanged("fio_doctor");
					this.Onfio_doctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_soec_doctor", DbType="NVarChar(50)")]
		public string soec_doctor
		{
			get
			{
				return this._soec_doctor;
			}
			set
			{
				if ((this._soec_doctor != value))
				{
					this.Onsoec_doctorChanging(value);
					this.SendPropertyChanging();
					this._soec_doctor = value;
					this.SendPropertyChanged("soec_doctor");
					this.Onsoec_doctorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_star_date", DbType="Date")]
		public System.Nullable<System.DateTime> star_date
		{
			get
			{
				return this._star_date;
			}
			set
			{
				if ((this._star_date != value))
				{
					this.Onstar_dateChanging(value);
					this.SendPropertyChanging();
					this._star_date = value;
					this.SendPropertyChanged("star_date");
					this.Onstar_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_end_date", DbType="Date")]
		public System.Nullable<System.DateTime> end_date
		{
			get
			{
				return this._end_date;
			}
			set
			{
				if ((this._end_date != value))
				{
					this.Onend_dateChanging(value);
					this.SendPropertyChanging();
					this._end_date = value;
					this.SendPropertyChanged("end_date");
					this.Onend_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_close_date", DbType="Date")]
		public System.Nullable<System.DateTime> close_date
		{
			get
			{
				return this._close_date;
			}
			set
			{
				if ((this._close_date != value))
				{
					this.Onclose_dateChanging(value);
					this.SendPropertyChanging();
					this._close_date = value;
					this.SendPropertyChanged("close_date");
					this.Onclose_dateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_id_fk_next", DbType="Int")]
		public System.Nullable<int> id_fk_next
		{
			get
			{
				return this._id_fk_next;
			}
			set
			{
				if ((this._id_fk_next != value))
				{
					if (this._TicketList.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.Onid_fk_nextChanging(value);
					this.SendPropertyChanging();
					this._id_fk_next = value;
					this.SendPropertyChanged("id_fk_next");
					this.Onid_fk_nextChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="TicketList_NextDate", Storage="_TicketList", ThisKey="id_fk_next", OtherKey="Id_ticket", IsForeignKey=true)]
		public TicketList TicketList
		{
			get
			{
				return this._TicketList.Entity;
			}
			set
			{
				TicketList previousValue = this._TicketList.Entity;
				if (((previousValue != value) 
							|| (this._TicketList.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._TicketList.Entity = null;
						previousValue.NextDate.Remove(this);
					}
					this._TicketList.Entity = value;
					if ((value != null))
					{
						value.NextDate.Add(this);
						this._id_fk_next = value.Id_ticket;
					}
					else
					{
						this._id_fk_next = default(Nullable<int>);
					}
					this.SendPropertyChanged("TicketList");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.ListTicket")]
	public partial class ListTicket
	{
		
		private System.Nullable<int> _Номер_листа;
		
		private string _ФИО_пациента;
		
		private System.Nullable<int> _Продление;
		
		private System.Nullable<System.DateTime> _Дата_с;
		
		private System.Nullable<System.DateTime> _Дата_по;
		
		private System.Nullable<System.DateTime> _Дата_закрытия_больничного;
		
		public ListTicket()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Номер листа]", Storage="_Номер_листа", DbType="Int")]
		public System.Nullable<int> Номер_листа
		{
			get
			{
				return this._Номер_листа;
			}
			set
			{
				if ((this._Номер_листа != value))
				{
					this._Номер_листа = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ФИО пациента]", Storage="_ФИО_пациента", DbType="NVarChar(70)")]
		public string ФИО_пациента
		{
			get
			{
				return this._ФИО_пациента;
			}
			set
			{
				if ((this._ФИО_пациента != value))
				{
					this._ФИО_пациента = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Продление", DbType="Int")]
		public System.Nullable<int> Продление
		{
			get
			{
				return this._Продление;
			}
			set
			{
				if ((this._Продление != value))
				{
					this._Продление = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Дата с]", Storage="_Дата_с", DbType="Date")]
		public System.Nullable<System.DateTime> Дата_с
		{
			get
			{
				return this._Дата_с;
			}
			set
			{
				if ((this._Дата_с != value))
				{
					this._Дата_с = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Дата по]", Storage="_Дата_по", DbType="Date")]
		public System.Nullable<System.DateTime> Дата_по
		{
			get
			{
				return this._Дата_по;
			}
			set
			{
				if ((this._Дата_по != value))
				{
					this._Дата_по = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Дата закрытия больничного]", Storage="_Дата_закрытия_больничного", DbType="Date")]
		public System.Nullable<System.DateTime> Дата_закрытия_больничного
		{
			get
			{
				return this._Дата_закрытия_больничного;
			}
			set
			{
				if ((this._Дата_закрытия_больничного != value))
				{
					this._Дата_закрытия_больничного = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.TicketView")]
	public partial class TicketView
	{
		
		private System.Nullable<int> _Номер_листа;
		
		private string _ФИО_пациента;
		
		private string _Участок;
		
		private string _Код_заболевания;
		
		private System.Nullable<int> _Возраст;
		
		private string _Место_работы;
		
		private System.Nullable<System.DateTime> _Дата_открытия_больничного;
		
		private System.Nullable<System.DateTime> _Дата_закрытия_больничного;
		
		private System.Nullable<System.DateTime> _Дата_выдачи_листа;
		
		public TicketView()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Номер листа]", Storage="_Номер_листа", DbType="Int")]
		public System.Nullable<int> Номер_листа
		{
			get
			{
				return this._Номер_листа;
			}
			set
			{
				if ((this._Номер_листа != value))
				{
					this._Номер_листа = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[ФИО пациента]", Storage="_ФИО_пациента", DbType="NVarChar(70)")]
		public string ФИО_пациента
		{
			get
			{
				return this._ФИО_пациента;
			}
			set
			{
				if ((this._ФИО_пациента != value))
				{
					this._ФИО_пациента = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Участок", DbType="NVarChar(3)")]
		public string Участок
		{
			get
			{
				return this._Участок;
			}
			set
			{
				if ((this._Участок != value))
				{
					this._Участок = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Код заболевания]", Storage="_Код_заболевания", DbType="NVarChar(10)")]
		public string Код_заболевания
		{
			get
			{
				return this._Код_заболевания;
			}
			set
			{
				if ((this._Код_заболевания != value))
				{
					this._Код_заболевания = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Возраст", DbType="Int")]
		public System.Nullable<int> Возраст
		{
			get
			{
				return this._Возраст;
			}
			set
			{
				if ((this._Возраст != value))
				{
					this._Возраст = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Место работы]", Storage="_Место_работы", DbType="NVarChar(50)")]
		public string Место_работы
		{
			get
			{
				return this._Место_работы;
			}
			set
			{
				if ((this._Место_работы != value))
				{
					this._Место_работы = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Дата открытия больничного]", Storage="_Дата_открытия_больничного", DbType="Date")]
		public System.Nullable<System.DateTime> Дата_открытия_больничного
		{
			get
			{
				return this._Дата_открытия_больничного;
			}
			set
			{
				if ((this._Дата_открытия_больничного != value))
				{
					this._Дата_открытия_больничного = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Дата закрытия больничного]", Storage="_Дата_закрытия_больничного", DbType="Date")]
		public System.Nullable<System.DateTime> Дата_закрытия_больничного
		{
			get
			{
				return this._Дата_закрытия_больничного;
			}
			set
			{
				if ((this._Дата_закрытия_больничного != value))
				{
					this._Дата_закрытия_больничного = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="[Дата выдачи листа]", Storage="_Дата_выдачи_листа", DbType="Date")]
		public System.Nullable<System.DateTime> Дата_выдачи_листа
		{
			get
			{
				return this._Дата_выдачи_листа;
			}
			set
			{
				if ((this._Дата_выдачи_листа != value))
				{
					this._Дата_выдачи_листа = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
